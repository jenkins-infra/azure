name: "Generate new end date for the trusted.ci.jenkins.io controller Azure AD Application password"

scms:
  default:
    kind: github
    spec:
      user: "{{ .github.user }}"
      email: "{{ .github.email }}"
      owner: "{{ .github.owner }}"
      repository: "{{ .github.repository }}"
      token: "{{ requiredEnv .github.token }}"
      username: "{{ .github.username }}"
      branch: "{{ .github.branch }}"

sources:
  currentExpiry:
    name: Get current `expiry` date
    kind: terraform/file #  as per updatecli/updatecli#1859 need to use terraform/file findsubmatch for now
    spec:
      file: trusted.ci.jenkins.io.tf
      path: 'module.controller_service_principal_end_date'
  nextExpiry:
    name: Prepare next `expiry` date within 3 months
    kind: shell
    spec:
      command: bash ./updatecli/scripts/dateadd.sh
      environments:
        - name: PATH

conditions:
  checkIfExpirySoonExpired:
    kind: shell
    sourceid: currentExpiry
    spec:
      command: bash ./updatecli/scripts/datediff.sh # current expiry date value passed as argument
      environments:
        - name: PATH

targets:
  updateNextExpiry:
    name: Update Terraform file `trusted.ci.jenkins.io.tf` with new expiration date for controller_service_principal_end_date
    kind: file
    sourceid: nextExpiry
    spec:
      file: trusted.ci.jenkins.io.tf
      matchpattern: (controller_service_principal_end_date.*=.*\")(.*)(\".*)
      replacepattern: ${1}{{ source "nextExpiry" }}"
    scmid: default

actions:
  default:
    kind: github/pullrequest
    scmid: default
    spec:
      title: Generate a new Azure AD Application password with expiration date {{ source "nextExpiry" }} on `trusted.ci.jenkins.io`
      description: |
        This PR generates a new Azure AD application password with a new end date for the `trusted.ci.jenkins.io` controller (to allow spawning Azure VM agents).
        Once this PR is merged and deployed with success by Terraform (on infra.ci.jenkins.io), you can retrieve the new password's value in Terraform state (do NOT save it anywhere!) and update (manually) the trusted.ci.jenkins.io credential named `azure-jenkins-sponsorship-credentials` through the Jenkins UI.
        Finally, verify both the Azure Credential and Azure VM clouds by clicking on the "Verify <...>" buttons with success.
      labels:
        - terraform
